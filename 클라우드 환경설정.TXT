http POST http://localhost:8082/smokingAreas smokingAreaId=1002 latitude=15 longitude=15 smokingAreaName="BBB"

http POST http://localhost:8081/checkIns id=1001 checkInId=101 userId=1 stasus="aa"

(대소문자 구분)
User ID : Skccuser03
Password : Skcc@123
Console login link : https://kttestpyj.signin.aws.amazon.com/console

※ 생성정보
AKIAXHDEFLPIVFHKDGVF
LIiD1OVoty+Qd/11FKZKbkfQ8D2RQtUexKFgHpj5

※ 지역 : ap-northeast-2

※ 클러스터생성 : eksctl create cluster --name Skccuser03-sk-Cluster --version 1.15 --nodegroup-name standard-workers --node-type t3.medium --nodes 2 --nodes-min 1 --nodes-max 3
Skccuser03-sk-Cluster	
eksctl delete cluster --name Skccuser03-sk-Cluster
eksctl create cluster --name Skccuser03-sm-Cluster --version 1.17 --nodegroup-name standard-workers --node-type t3.medium --nodes 3 --nodes-min 1 --nodes-max 3


※ ECR생성


3. aws ecr create-repository --repository-name skccuser03-gateway --image-scanning-configuration scanOnPush=true --region ap-northeast-2
4. aws ecr create-repository --repository-name skccuser03-point --image-scanning-configuration scanOnPush=true --region ap-northeast-2
2. aws ecr create-repository --repository-name skccuser03-checkin --image-scanning-configuration scanOnPush=true --region ap-northeast-2
3. aws ecr create-repository --repository-name skccuser03-pay --image-scanning-configuration scanOnPush=true --region ap-northeast-2
4. aws ecr create-repository --repository-name skccuser03-customercenter --image-scanning-configuration scanOnPush=true --region ap-northeast-2

aws ecr create-repository --repository-name skccuser03-customercenter --image-scanning-configuration scanOnPush=true --region ap-northeast-2



※ Docker login : docker login --username AWS -p $(aws ecr get-login-password --region ap-northeast-2) 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/


※ github 사용법
1.탐색기 > 서비스 폴더 이동
2.탐색기 URL 창에 CMD
3.서비스 폴더 CMD에서
	git init
	git config --global user.name billingoss
            git config --global user.email casepencil366@gmail.com
  
4.GITHUB에서 레파지토리 생성
	cna-customercenter
	skccuser03-user
	skccuser03-check
	skccuser03-gateway
	skccuser03-point
	skccuser03-smokingarea
	skccuser03-mypage

skccuser03-gateway
skccuser03-point
skccuser03-checkin
skccuser03-pay
skccuser03-customercenter

	
5.cmd창에서
            git add .
	git commit -m "1st commit.."
            git remote add origin https://github.com/billingoss/skccuser03-checkin.git
	git remote add origin https://github.com/billingoss/skccuser03-pay.git
            git remote add origin https://github.com/billingoss/skccuser03-gateway.git
            git remote add origin https://github.com/billingoss/skccuser03-point.git
git remote add origin https://github.com/billingoss/skccuser03-mypage.git

            git remote add origin https://github.com/billingoss/skccuser03-customercenter.git

	git push -u origin master

6.github에서 코드 확인
7.서비스 : delivery, gateway, order에서도 1~6번 적용

8.콘솔
	git clone [git repository 주소]
            git clone https://github.com/billingoss/skccuser03-checkin.git
	git clone https://github.com/billingoss/skccuser03-pay.git
            git clone https://github.com/billingoss/skccuser03-gateway.git
            git clone https://github.com/billingoss/skccuser03-point.git

            git clone https://github.com/billingoss/skccuser03-mypage.git

	git clone https://github.com/zzangcrom/cna-ordd.git
9.콘솔
	mvn package
	



*이미지 생성

2. docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-checkin:v1 .
1. docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-pay:v1 .
3. docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-gateway:v1 .
4. docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-point:v1 .
6. docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-mypage:v1 .

docker build -t 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-customercenter:v1 .


*이미지 푸쉬
docker push 271153858532.dkr.ecr.ap-southeast-1.amazonaws.com/admin06-cna-gateway:v1

2. docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-checkin:v1
1. docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-pay:v1
3. docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-gateway:v1
4. docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-point:v1
6. docker push 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/skccuser03-customercenter:v1



--------------------------------------------------------------------------------------------------



aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin Skccuser03.dkr.ecr.ap-northeast-2.amazonaws.com

docker login --username AWS -p $(aws ecr get-login-password --region ap-northeast-2) 496278789073.dkr.ecr.ap-northeast-2.amazonaws.com/

aws ecr create-repository --repository-name skccuser03-() --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name skccuser03-() --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name skccuser03-() --image-scanning-configuration scanOnPush=true --region ap-northeast-2
aws ecr create-repository --repository-name skccuser03-() --image-scanning-configuration scanOnPush=true --region ap-northeast-2

